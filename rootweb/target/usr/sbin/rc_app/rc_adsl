args_for_adslctl=""

add_adsl_arg() {
    if [ "x$2" != x ]; then
        if [ $2 != "(null)" ]; then
            if [ "x$3" != "x" ]; then
                args_for_adslctl="$args_for_adslctl $1 $2"
            fi
        fi
    fi
}

check_adsl_config() {
    # What the user wants
    SBdslMode="$(/usr/sbin/nvram-util get wan_dslmode)"
    SBlpair="$(/usr/sbin/nvram-util get wan_lpair)"
    SBbitswap="$(/usr/sbin/nvram-util get wan_bitswap)"
    SBsra="$(/usr/sbin/nvram-util get wan_sra)"
    SBtrellis="$(/usr/sbin/nvram-util get wan_trellis)"
    SBsnr="$(/usr/sbin/nvram-util get wan_snr)"
    SBCoMinMgn="$(/usr/sbin/nvram-util get wan_CoMinMgt)"
    SBik="$(/usr/sbin/nvram-util get wan_i24k)"
    SBsesdrop="$(/usr/sbin/nvram-util get wan_sesdrop)"
    SBmonitorTone="$(/usr/sbin/nvram-util get wan_monitorTone)"

#TODO : How does one use these???? (are they VDSL only options?)
    SBdynamicD="$(/usr/sbin/nvram-util get wan_dynamicD)"
    SBdynamicF="$(/usr/sbin/nvram-util get wan_dynamicF)"
    SBSOS="$(/usr/sbin/nvram-util get wan_SOS)"
    SBphyReXmt="$(/usr/sbin/nvram-util get wan_phyReXmt)"

    case $dslMode in
      GDMT)
        SBdslmodeargs="dm"
        ;;
      A2MOD)
        SBdslmodeargs="2m"
        ;;
      A2PMOD)
        SBdslmodeargs="pm"
        ;;
      *)
        SBdslmodeargs="dl2tepmM3M5"
        ;;
    esac

    # What is actually set (from Richud's v1 code)
    /usr/sbin/adslctl profile --show > /tmp/profile_show

    for line in $(cat /tmp/profile_show | tr " \t" "#")
    do
      case "$line" in
        "#G.Dmt#Enabled") mod=${mod}d ;;
        "#G.lite#Enabled") mod=${mod}l ;;
        "#T1.413#Enabled") mod=${mod}t ;;
        "#ADSL2#Enabled") mod=${mod}2 ;;
        "#AnnexL#Enabled") mod=${mod}e ;;
        "#ADSL2+#Enabled") mod=${mod}p ;;
        "#AnnexM#Enabled") mod=${mod}mM3M5 ;;
        "#VDSL2#Enabled") mod=${mod}v ;;
        *pair) lpair=$(echo $line | sed "s@#\([A-Za-z]\).*@\1@" | tr '[:upper:]' '[:lower:]');;
        "#bitswap#"*) bitswap=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#sra#"*) sra=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#trellis#"*) trellis=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#sesdrop#"*) sesdrop=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#CoMinMgn#"*) CoMinMgn=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#24k#"*) i24k=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#phyReXmt(Us/Ds)#Off/Off") phyReXmt=0;;
        "#phyReXmt(Us/Ds)#Off/On") phyReXmt=1;;
        "#phyReXmt(Us/Ds)#On/Off") phyReXmt=2;;
        "#phyReXmt(Us/Ds)#On/On") phyReXmt=3;;
        "#monitorTone:#"*) monitorTone=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#dynamicD:#"*) dynamicD=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#dynamicF:#"*) dynamicF=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#SOS:#"*) SOS=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#Training"*) snr=$(echo $line | sed "s@.*#\([-0-9]*\).*@\1@");[ "$snr" = "-1" ] && snr=100;;
        esac
    done


    add_adsl_arg "--mod"         $SBdslmodeargs   $mod
    add_adsl_arg "--bitswap"     $SBbitswap       $bitswap
    add_adsl_arg "--sra"         $SBsra           $sra
    add_adsl_arg "--lpair"       $SBlpair         $lpair
    add_adsl_arg "--snr"         $SBsnr           $snr
    add_adsl_arg "--trellis"     $SBtrellis       $trellis
    add_adsl_arg "--i24k"        $SBik            $i24k
    add_adsl_arg "--CoMinMgn"    $SBCoMinMgn      $CoMinMgn
    add_adsl_arg "--sesdrop"     $SBsesdrop       $sesdrop
    add_adsl_arg "--monitorTone" $SBmonitorTone   $monitorTraining

#TODO : How does one use these????
#    dynamicD
#    dynamicF
#    SOS
#    phyReXmt
}

case "$1" in
    needs)
        check_adsl_config
        if [ "x$args_for_adslctl" != "x" ]; then
            echo restart
        else
            echo NOTHING
        fi
        ;;
    start)
        # This first line is hopefully not needed as it relies on two parameters which we don't know.
        # The first is probaby either "medley" or "reverb", the second a hex number about the tones
        # used for upstream. No idea how to set it
#        /usr/sbin/adslctl connection --%s --tones 0 32 0x%08x 32 224 0x00000000000000000000000000000000000000000000000000000000
        check_adsl_config
        if [ "x$args_for_adslctl" != "x" ]; then
            /usr/sbin/adslctl configure $args_for_adslctl
        fi
        /usr/sbin/adslctl connection --up
        ;;
    strop)
        echo "I'm far too polite."
        ;;
    stop)
        /usr/sbin/adslctl connection --down
        ;;
    reload|restart)
        $0 stop
        $0 start
        ;;
    *)
        echo "Usage: $0 needs|start|stop|restart|reload"
        exit 1
        ;;
esac
exit 0
