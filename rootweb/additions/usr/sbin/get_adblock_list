#!/bin/sh
#
# Create a file (set by $1) to contain the latest information from
# yoyo for adblocking in /etc/hosts format using the IP from
# ad_catcher_ip in nvram (defaults to 198.168.100.1).
# If ad_blocking isn't enabled the file will be balnk.
#
PATH=/usr/sbin

if [ $# -lt 1 ]; then
    echo "Usage: $0 output-filename"
    exit
fi

adblock_enable="$(/usr/sbin/nvram-util get adblock_enable)"

# Make sure that there is a blank file to start with
if [ -e $1 ]; then
   rm -f $1
fi
touch $1

# Only fill out the list if things enabled
if [ "x$adblock_enable" != "x1" ]; then
    exit 0;
fi

# Where the list comes from
list_src_url='https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts'

# the ipaddress where we want to send the requests to, instead of the
# bannerservers. We send it to a known never used address which
# iptables catches and reroutes back to us on an unusual port.

ad_catcher_ip="$(/usr/sbin/nvram-util get adblock_ip)"
if [ "x$ad_catcher_ip" = "x" ]; then ad_catcher_ip="198.51.100.1"; fi

# Where to find wget
wget=/usr/sbin/wget

# Do the work
tmpfile=/tmp/adblocklist.pre

# Get the source file
$wget --no-check-certificate -q $list_src_url -O $tmpfile

# Remove hosts we want to let through from the ban list
for line in "$(/usr/sbin/nvram-util getarray adblock_allow '\n')"; do
    if [ "x$line" != "x" ]; then
        sed -i "/$line/d" $tmpfile
    fi
done

# Select only the lines beginning with '0.0.0.0' and then replace that with the IP we are using.
sed -n -e '/^0.0.0.0/p' $tmpfile | sed s/0.0.0.0/$ad_catcher_ip/ > $1

# Clean up
rm $tmpfile
