#!/bin/sh
if [ -e /usr/etc/log_rc_flag ]; then
    echo "`date` [rc_adsl] $0 $@">> /var/log/rc_calls
fi

args_for_adslctl=""

add_adsl_arg() {
    if [ "x$2" != x ]; then
        if [ $2 != "(null)" ]; then
            if [ "x$3" != "x" ]; then
                if [ $2 != $3 ]; then
                    args_for_adslctl="$args_for_adslctl $1 $2"
                fi
            fi
        fi
    fi
}

check_adsl_config() {
    # What the user wants
    SBdslMode="$(/usr/sbin/nvram-util get wan_dslmode)"
    SBlpair="$(/usr/sbin/nvram-util get wan_lpair)"
    SBbitswap="$(/usr/sbin/nvram-util get wan_bitswap)"
    SBsra="$(/usr/sbin/nvram-util get wan_sra)"
    SBtrellis="$(/usr/sbin/nvram-util get wan_trellis)"
    SBsnr="$(/usr/sbin/nvram-util get wan_snr)"
    SBCoMinMgn="$(/usr/sbin/nvram-util get wan_CoMinMgt)"
    SBi24k="$(/usr/sbin/nvram-util get wan_i24k)"
    SBsesdrop="$(/usr/sbin/nvram-util get wan_sesdrop)"
    SBmonitorTone="$(/usr/sbin/nvram-util get wan_monitorTone)"

#TODO : How does one use these???? (are they VDSL only options?)
    SBdynamicD="$(/usr/sbin/nvram-util get wan_dynamicD)"
    SBdynamicF="$(/usr/sbin/nvram-util get wan_dynamicF)"
    SBSOS="$(/usr/sbin/nvram-util get wan_SOS)"
    SBphyReXmt="$(/usr/sbin/nvram-util get wan_phyReXmt)"

    SBannexM=0
    SBannexL=0
    SBGdmt=0
    SBGlite=0
    SBtwo=0
    SBt1413=0
    SBtwoplus=0
    case $SBdslMode in
      GDMT)
        SBGdmt=1
        SBannexM=1
        ;;
      A2MOD)
        SBtwo=1
        SBannexM=1
        ;;
      A2PMOD)
        SBtwoplus=1
        SBannexM=1
        ;;
      *)
        SBtwo=1
        SBGdmt=1
        SBGlite=1
        SBannexM=1
        SBannexL=1
        SBt1413=1
        SBtwoplus=1
        ;;
    esac

    # What is actually set (from Richud's v1 code)
    /usr/sbin/adslctl profile --show > /tmp/profile_show

    ISannexM=0
    ISannexL=0
    ISGdmt=0
    ISGlite=0
    IStwo=0
    ISt1413=0
    IStwoplus=0

    for line in $(cat /tmp/profile_show | tr " \t" "#")
    do
      case "$line" in
        "#G.Dmt#Enabled")  ISGdmt=1 ;;
        "#G.lite#Enabled") ISGlite=1 ;;
        "#ADSL2#Enabled")  IStwo=1 ;;
        "#T1.413#Enabled") ISt1413=1 ;;
        "#ADSL2+#Enabled") IStwoplus=1 ;;
        "#AnnexL#Enabled") ISannexL=1 ;;
        "#AnnexM#Enabled") ISannexM=1 ;;
        *pair) ISlpair=$(echo $line | sed "s@#\([A-Za-z]\).*@\1@" | tr '[:upper:]' '[:lower:]');;
        "#bitswap#"*) ISbitswap=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#sra#"*) ISsra=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#trellis#"*) IStrellis=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#sesdrop#"*) ISsesdrop=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#CoMinMgn#"*) ISCoMinMgn=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#24k#"*) ISi24k=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#phyReXmt(Us/Ds)#Off/Off") ISphyReXmt=0;;
        "#phyReXmt(Us/Ds)#Off/On") ISphyReXmt=1;;
        "#phyReXmt(Us/Ds)#On/Off") ISphyReXmt=2;;
        "#phyReXmt(Us/Ds)#On/On") ISphyReXmt=3;;
        "#monitorTone:#"*) ISmonitorTone=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#dynamicD:#"*) ISdynamicD=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#dynamicF:#"*) ISdynamicF=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#SOS:#"*) ISSOS=$(echo $line | sed "s@.*#\([Onf]*\)@\1@" | tr '[:upper:]' '[:lower:]') ;;
        "#Training"*) ISsnr=$(echo $line | sed "s@.*#\([-0-9]*\).*@\1@");[ "$snr" = "-1" ] && snr=100;;
        esac
    done

    mod_good=1
    if [ $SBtwo != $IStwo ]; then mod_good=0; fi
    if [ $SBannexL != $ISannexL ]; then mod_good=0; fi
    if [ $SBannexM != $ISannexM ]; then mod_good=0; fi
    if [ $SBt1413 != $ISt1413 ]; then mod_good=0; fi
    if [ $SBtwoplus != $IStwoplus ]; then mod_good=0; fi
    if [ $SBGdmt != $ISGdmt ]; then mod_good=0; fi
    if [ $SBGlite != $ISGlite ]; then mod_good=0; fi

    if [ $mod_good = "0" ]; then
        mod=""
        if [ $SBGdmt = "1" ]; then mod=${mod}d; fi
        if [ $SBGlite = "1" ]; then mod=${mod}l; fi
        if [ $SBtwo = "1" ]; then mod=${mod}2; fi
        if [ $SBt1413 = "1" ]; then mod=${mod}t; fi
        if [ $SBtwoplus = "1" ]; then mod=${mod}p; fi
        if [ $SBannexL = "1" ]; then mod=${mod}e; fi
        if [ $SBannexM = "1" ]; then mod=${mod}m; fi
        args_for_adslctl="$args_for_adslctl --mod $mod"
    fi

    add_adsl_arg "--bitswap"     $SBbitswap       $ISbitswap
    add_adsl_arg "--sra"         $SBsra           $ISsra
    add_adsl_arg "--lpair"       $SBlpair         $ISlpair
    add_adsl_arg "--snr"         $SBsnr           $ISsnr
    add_adsl_arg "--trellis"     $SBtrellis       $IStrellis
    add_adsl_arg "--i24k"        $SBi24k          $ISi24k
    add_adsl_arg "--CoMinMgn"    $SBCoMinMgn      $ISCoMinMgn
    add_adsl_arg "--sesdrop"     $SBsesdrop       $ISsesdrop
    add_adsl_arg "--monitorTone" $SBmonitorTone   $ISmonitorTone

#TODO : How does one use these????
#    dynamicD
#    dynamicF
#    SOS
#    phyReXmt
}

case "$1" in
    needs)
        check_adsl_config
        if [ "x$args_for_adslctl" != "x" ]; then
            echo configure
        else
            echo NOTHING
        fi
        ;;
    configure)
        # This first line is hopefully not needed as it relies on two parameters which we don't know.
        # The first is probaby either "medley" or "reverb", the second a hex number about the tones
        # used for upstream. No idea how to set it
#        /usr/sbin/adslctl connection --%s --tones 0 32 0x%08x 32 224 0x00000000000000000000000000000000000000000000000000000000
        check_adsl_config
        if [ "x$args_for_adslctl" != "x" ]; then
            /usr/sbin/adslctl configure $args_for_adslctl
        fi
        ;;
    start)
        /usr/sbin/adslctl connection --up
        ;;
    strop)
        echo "I'm far too polite."
        ;;
    stop)
        /usr/sbin/adslctl connection --down
        ;;
    reload|restart)
        $0 stop
        $0 configure
        $0 start
        ;;
    *)
        echo "Usage: $0 needs|configure|start|stop|restart|reload"
        exit 1
        ;;
esac
exit 0
