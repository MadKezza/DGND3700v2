#!/bin/sh
PATH=/usr/sbin

logfile=/var/log/dnsmasq.log
adblock_hosts_file=/var/tmp/hosts.adblock
extra_hosts_file=/var/tmp/hosts.me
reserved_file=/var/tmp/dhcp.reserved
args_for_dnsmasq="--interface=group1"
last_start_file=/var/tmp/dnsmasq_args

rc_log() {
    if [ -e /usr/etc/log_rc_flag ]; then
        echo "`/usr/sbin/date` [rc_dnsmasq] $@" >> /var/log/rc_calls
    fi
}

rc_log_echo() {
    rc_log "$@"
    echo "$@"
}

waitall() {
    for pid in "$@"; do
        wait "$pid"
    done
}

make_extra_hosts_file() {
    myip="$(/usr/sbin/nvram-util get lan_ipaddr)"
    if [ "x$myip" != "x" ]; then
        echo "$myip www.routerlogin.net" > $extra_hosts_file
    fi
}

make_reserved_file() {
    rm $reserved_file
    touch $reserved_file
    /usr/sbin/nvram-util getarray dhcp_reserved , | while IFS= read -r line
    do
        echo $line | /usr/sbin/awk -v FS=',' -v OFS=',' '{print $3,$2,$1; exit}' >> $reserved_file
    done
}

rc_log "$0 $@"

get_dnsmasq_args() {
    dns_user_set="$(/usr/sbin/nvram-util get wan_fix_dns)"
    if [ "x$dns_user_set" = "x1" ]; then
        dns1="$(/usr/sbin/nvram-util get wan_dns1)"
        dns2="$(/usr/sbin/nvram-util get wan_dns2)"

        if [ "x$dns1$dns2" != "x" ]; then
            args_for_dnsmasq="$args_for_dnsmasq --no-resolv"
            if [ "x$dns1" != "x" ]; then
                args_for_dnsmasq="$args_for_dnsmasq --server=$dns1"
            fi
            if [ "x$dns2" != "x" ]; then
                args_for_dnsmasq="$args_for_dnsmasq --server=$dns2"
            fi
        fi
    fi
    args_for_dnsmasq="$args_for_dnsmasq --log-facility=$logfile --clear-on-reload --addn-hosts=$adblock_hosts_file --addn-hosts=$extra_hosts_file --dhcp-hostsfile=$reserved_file"

    dhcp_on="$(/usr/sbin/nvram-util get dhcp_server_enable)"
    if [ "x$dhcp_on" = "x1" ]; then
        dhcp_start="$(/usr/sbin/nvram-util get dhcp_start_ip)"
        dhcp_end="$(/usr/sbin/nvram-util get dhcp_end_ip)"
        mask="$(/usr/sbin/nvram-util get lan_netmask)"
        lease_length="24h"

        if [ "x$dhcp_start" != "x" ]; then
            if [ "x$dhcp_end" != "x" ]; then
                args_for_dnsmasq="$args_for_dnsmasq --dhcp-range=$dhcp_start,$dhcp_end,$mask,$lease_length --leasefile-ro --dhcp-script=/usr/sbin/dhcp_lease_update.sh"
            fi
        fi
    fi
}

case "$1" in
    start)
        make_reserved_file
        make_extra_hosts_file
        get_dnsmasq_args
        PID="$(/usr/sbin/pidof dnsmasq)"
        if [ "x$PID" != "x" ]; then
            killit=0
            lastargs="$(/usr/sbin/cat $last_start_file)"
            if [ "x$lastargs" != "x$args_for_dnsmasq" ]; then killit=1; fi
            if [ "$killit" = "1" ]; then $0 stop; fi
        fi

        PID="$(/usr/sbin/pidof dnsmasq)"
        if [ "x$PID" = "x" ]; then
            /usr/sbin/dnsmasq $args_for_dnsmasq
            PID="$(/usr/sbin/pidof dnsmasq)"
            if [ "x${PID}" != "x" ]; then
                echo "$args_for_dnsmasq" > $last_start_file
	        rc_log_echo "dnsmasq started succesfully. ( $args_for_dnsmasq )"
                /usr/sbin/get_adblock_list $adblock_hosts_file
                /usr/sbin/kill -HUP $PID
	    else
	        rc_log_echo "Error starting dnsmasq. ( $args_for_dnsmasq )"
	    fi
        else
            rc_log_echo "dnsmasq already started, leaving it alone"
        fi
        ;;
    strop)
        echo "I'm far too polite."
        ;;
    stop)
        PID="$(/usr/sbin/pidof dnsmasq)"
	if [ "x$PID" != "x" ];then
	    /usr/sbin/killall dnsmasq
            sleep 1
            waitall $PID
            rc_log_echo "dnsmasq stopped."
	else
	    rc_log_echo "dnsmasq is already stopped."
	fi
        ;;
    restart)
        $0 stop
        $0 start
        ;;
    reload)
        PID="$(/usr/sbin/pidof dnsmasq)"
        if [ "x${PID}" != "x" ]; then
            make_reserved_file
            make_extra_hosts_file
            /usr/sbin/get_adblock_list $adblock_hosts_file
           /usr/sbin/kill -HUP $PID
        fi
        ;;
    *)
        echo "Usage: $0 start|stop|restart|reload"
        exit 1
        ;;
esac
exit 0
